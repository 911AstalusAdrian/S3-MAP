ID: 1
Execution stack: [
{v = 20}|for(v=0;v<3;v=v + 1){Fork{
Print{v}|{v = v + 1}
}}|{v = v * 10}|Print{v}
]
[
(v:int)
]

Symbol table: 
Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = 20}|for(v=0;v<3;v=v + 1){Fork{
Print{v}|{v = v + 1}
}}|{v = v * 10}|Print{v}
]

Symbol table: v:0

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
for(v=0;v<3;v=v + 1){Fork{
Print{v}|{v = v + 1}
}}|{v = v * 10}|Print{v}
]
[
{v = 20}
]

Symbol table: v:0

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
for(v=0;v<3;v=v + 1){Fork{
Print{v}|{v = v + 1}
}}|{v = v * 10}|Print{v}
]

Symbol table: v:20

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
for(v=0;v<3;v=v + 1){Fork{
Print{v}|{v = v + 1}
}}
]

Symbol table: v:20

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
(v:int)|{v = 0}|while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]

Symbol table: v:20

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
{v = 0}|while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]
[
(v:int)
]

Symbol table: v:20

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = 20}|for(v=0;v<3;v=v + 1){Fork{
Print{v}|{v = v + 1}
}}|{v = v * 10}|Print{v}
]
[
(v:int)
]

Symbol table: 
Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = 20}|for(v=0;v<3;v=v + 1){Fork{
Print{v}|{v = v + 1}
}}|{v = v * 10}|Print{v}
]

Symbol table: v:0

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
for(v=0;v<3;v=v + 1){Fork{
Print{v}|{v = v + 1}
}}|{v = v * 10}|Print{v}
]
[
{v = 20}
]

Symbol table: v:0

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
for(v=0;v<3;v=v + 1){Fork{
Print{v}|{v = v + 1}
}}|{v = v * 10}|Print{v}
]

Symbol table: v:20

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
for(v=0;v<3;v=v + 1){Fork{
Print{v}|{v = v + 1}
}}
]

Symbol table: v:20

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
{v = 0}|while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]

Symbol table: v:20

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]
[
{v = 0}
]

Symbol table: v:20

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]

Symbol table: v:0

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]
[
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
]

Symbol table: v:0

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]
[
{v = v + 1}
]
[
Fork{
Print{v}|{v = v + 1}
}
]

Symbol table: v:0

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]
[
{v = v + 1}
]

Symbol table: v:0

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 2
Execution stack: [
Print{v}|{v = v + 1}
]

Symbol table: v:0

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]

Symbol table: v:1

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 2
Execution stack: [
{v = v + 1}
]
[
Print{v}
]

Symbol table: v:0

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]
[
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
]

Symbol table: v:1

Output list: 0

File table: 
Heap table: 
----------------------------------------------------

ID: 2
Execution stack: [
{v = v + 1}
]

Symbol table: v:0

Output list: 0

File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]
[
{v = v + 1}
]
[
Fork{
Print{v}|{v = v + 1}
}
]

Symbol table: v:1

Output list: 0

File table: 
Heap table: 
----------------------------------------------------

ID: 2
Execution stack: 
Symbol table: v:1

Output list: 0

File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]
[
{v = v + 1}
]

Symbol table: v:1

Output list: 0

File table: 
Heap table: 
----------------------------------------------------

ID: 3
Execution stack: [
Print{v}|{v = v + 1}
]

Symbol table: v:1

Output list: 0

File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]

Symbol table: v:2

Output list: 0

File table: 
Heap table: 
----------------------------------------------------

ID: 3
Execution stack: [
{v = v + 1}
]
[
Print{v}
]

Symbol table: v:1

Output list: 0

File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]
[
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
]

Symbol table: v:2

Output list: 0
1

File table: 
Heap table: 
----------------------------------------------------

ID: 3
Execution stack: [
{v = v + 1}
]

Symbol table: v:1

Output list: 0
1

File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]
[
{v = v + 1}
]
[
Fork{
Print{v}|{v = v + 1}
}
]

Symbol table: v:2

Output list: 0
1

File table: 
Heap table: 
----------------------------------------------------

ID: 3
Execution stack: 
Symbol table: v:2

Output list: 0
1

File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]
[
{v = v + 1}
]

Symbol table: v:2

Output list: 0
1

File table: 
Heap table: 
----------------------------------------------------

ID: 4
Execution stack: [
Print{v}|{v = v + 1}
]

Symbol table: v:2

Output list: 0
1

File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]

Symbol table: v:3

Output list: 0
1

File table: 
Heap table: 
----------------------------------------------------

ID: 4
Execution stack: [
{v = v + 1}
]
[
Print{v}
]

Symbol table: v:2

Output list: 0
1

File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]

Symbol table: v:3

Output list: 0
1
2

File table: 
Heap table: 
----------------------------------------------------

ID: 4
Execution stack: [
{v = v + 1}
]

Symbol table: v:2

Output list: 0
1
2

File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
Print{v}
]
[
{v = v * 10}
]

Symbol table: v:3

Output list: 0
1
2

File table: 
Heap table: 
----------------------------------------------------

ID: 4
Execution stack: 
Symbol table: v:3

Output list: 0
1
2

File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
Print{v}
]

Symbol table: v:30

Output list: 0
1
2

File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: 
Symbol table: v:30

Output list: 0
1
2
30

File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v1:Ref(int))|(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(cnt:int)
]

Symbol table: 
Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v1:Ref(int))|(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(v1:Ref(int))
]

Symbol table: cnt:0

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(0 -> int)

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(v2:Ref(int))
]

Symbol table: cnt:0
v1:(0 -> int)

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(v3:Ref(int))
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
New{v1, 2}
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2

----------------------------------------------------

ID: 1
Execution stack: [
New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
New{v2, 3}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2

----------------------------------------------------

ID: 1
Execution stack: [
New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3

----------------------------------------------------

ID: 1
Execution stack: [
newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
New{v3, 4}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3

----------------------------------------------------

ID: 1
Execution stack: [
newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

----------------------------------------------------

ID: 1
Execution stack: [
Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
newBarrier(cnt, ReadHeap{v2})
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

----------------------------------------------------

ID: 1
Execution stack: [
Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

----------------------------------------------------

ID: 1
Execution stack: [
Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

----------------------------------------------------

ID: 1
Execution stack: [
Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

----------------------------------------------------

ID: 2
Execution stack: [
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

----------------------------------------------------

ID: 1
Execution stack: [
await(cnt)|Print{ReadHeap{v3}}
]
[
Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

----------------------------------------------------

ID: 2
Execution stack: [
WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
]
[
await(cnt)
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

----------------------------------------------------

ID: 1
Execution stack: [
(v1:Ref(int))|(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(cnt:int)
]

Symbol table: 
Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v1:Ref(int))|(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(v1:Ref(int))
]

Symbol table: cnt:0

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(v2:Ref(int))
]

Symbol table: cnt:0
v1:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(v3:Ref(int))
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
New{v1, 2}
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
New{v2, 3}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
New{v3, 4}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
newBarrier(cnt, ReadHeap{v2})
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 1
Execution stack: [
Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 1
Execution stack: [
Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 2
Execution stack: [
await(cnt)|WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 1
Execution stack: [
await(cnt)|Print{ReadHeap{v3}}
]
[
Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 2
Execution stack: [
WriteHeap{v2, ReadHeap{v1} * 10}|Print{ReadHeap{v2}}
]
[
await(cnt)
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 1
Execution stack: [
(v1:Ref(int))|(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(cnt:int)
]

Symbol table: 
Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v1:Ref(int))|(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(v1:Ref(int))
]

Symbol table: cnt:0

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(v2:Ref(int))
]

Symbol table: cnt:0
v1:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(v3:Ref(int))
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
New{v1, 2}
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
New{v2, 3}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
New{v3, 4}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
newBarrier(cnt, ReadHeap{v2})
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 1
Execution stack: [
Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 1
Execution stack: [
Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 2
Execution stack: [
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 1
Execution stack: [
await(cnt)|Print{ReadHeap{v3}}
]
[
Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 2
Execution stack: [
WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
]
[
await(cnt)
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 1
Execution stack: [
(v1:Ref(int))|(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(cnt:int)
]

Symbol table: 
Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v1:Ref(int))|(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(v1:Ref(int))
]

Symbol table: cnt:0

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(v2:Ref(int))
]

Symbol table: cnt:0
v1:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(v3:Ref(int))
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
New{v1, 2}
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
New{v2, 3}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
New{v3, 4}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
newBarrier(cnt, ReadHeap{v2})
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 1
Execution stack: [
Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 1
Execution stack: [
Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 2
Execution stack: [
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 1
Execution stack: [
await(cnt)|Print{ReadHeap{v3}}
]
[
Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 2
Execution stack: [
WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
]
[
await(cnt)
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 1
Execution stack: [
await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2])
----------------------------------------------------

ID: 2
Execution stack: [
WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2])
----------------------------------------------------

ID: 3
Execution stack: [
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2])
----------------------------------------------------

ID: 1
Execution stack: [
Print{ReadHeap{v3}}
]
[
await(cnt)
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2])
----------------------------------------------------

ID: 2
Execution stack: [
Print{ReadHeap{v1}}
]
[
WriteHeap{v1, ReadHeap{v1} * 10}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2])
----------------------------------------------------

ID: 3
Execution stack: [
WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
]
[
await(cnt)
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2])
----------------------------------------------------

ID: 1
Execution stack: [
Print{ReadHeap{v3}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 2
Execution stack: [
Print{ReadHeap{v1}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 3
Execution stack: [
WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 1
Execution stack: 
Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4
20

File table: 
Heap table: 1 -> 20
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 2
Execution stack: 
Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4
20

File table: 
Heap table: 1 -> 20
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 3
Execution stack: [
WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
]
[
WriteHeap{v2, ReadHeap{v2} * 10}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4
20

File table: 
Heap table: 1 -> 20
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 3
Execution stack: [
WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4
20

File table: 
Heap table: 1 -> 20
2 -> 30
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 3
Execution stack: [
Print{ReadHeap{v2}}
]
[
WriteHeap{v2, ReadHeap{v2} * 10}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4
20

File table: 
Heap table: 1 -> 20
2 -> 30
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 3
Execution stack: [
Print{ReadHeap{v2}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4
20

File table: 
Heap table: 1 -> 20
2 -> 300
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 3
Execution stack: 
Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4
20
300

File table: 
Heap table: 1 -> 20
2 -> 300
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 4
Execution stack: [
(v1:Ref(int))|(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(cnt:int)
]

Symbol table: 
Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 4
Execution stack: [
(v1:Ref(int))|(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 4
Execution stack: [
(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(v1:Ref(int))
]

Symbol table: cnt:0

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 4
Execution stack: [
(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 4
Execution stack: [
(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(v2:Ref(int))
]

Symbol table: cnt:0
v1:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 4
Execution stack: [
(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 4
Execution stack: [
New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(v3:Ref(int))
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 4
Execution stack: [
New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 4
Execution stack: [
New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
New{v1, 2}
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 4
Execution stack: [
New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2

Barrier table: 
----------------------------------------------------

ID: 4
Execution stack: [
New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
New{v2, 3}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2

Barrier table: 
----------------------------------------------------

ID: 4
Execution stack: [
New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3

Barrier table: 
----------------------------------------------------

ID: 4
Execution stack: [
newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
New{v3, 4}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3

Barrier table: 
----------------------------------------------------

ID: 4
Execution stack: [
newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 
----------------------------------------------------

ID: 4
Execution stack: [
Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
newBarrier(cnt, ReadHeap{v2})
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 
----------------------------------------------------

ID: 4
Execution stack: [
Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 4
Execution stack: [
Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 4
Execution stack: [
Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 5
Execution stack: [
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 4
Execution stack: [
await(cnt)|Print{ReadHeap{v3}}
]
[
Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 5
Execution stack: [
WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
]
[
await(cnt)
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 4
Execution stack: [
await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [5])
----------------------------------------------------

ID: 5
Execution stack: [
WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [5])
----------------------------------------------------

ID: 6
Execution stack: [
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [5])
----------------------------------------------------

ID: 4
Execution stack: [
Print{ReadHeap{v3}}
]
[
await(cnt)
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [5])
----------------------------------------------------

ID: 5
Execution stack: [
Print{ReadHeap{v1}}
]
[
WriteHeap{v1, ReadHeap{v1} * 10}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [5])
----------------------------------------------------

ID: 6
Execution stack: [
WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
]
[
await(cnt)
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [5])
----------------------------------------------------

ID: 4
Execution stack: [
Print{ReadHeap{v3}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [5, 4, 6])
----------------------------------------------------

ID: 5
Execution stack: [
Print{ReadHeap{v1}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [5, 4, 6])
----------------------------------------------------

ID: 6
Execution stack: [
WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [5, 4, 6])
----------------------------------------------------

ID: 4
Execution stack: 
Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4
20

File table: 
Heap table: 1 -> 20
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [5, 4, 6])
----------------------------------------------------

ID: 5
Execution stack: 
Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4
20

File table: 
Heap table: 1 -> 20
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [5, 4, 6])
----------------------------------------------------

ID: 6
Execution stack: [
WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
]
[
WriteHeap{v2, ReadHeap{v2} * 10}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4
20

File table: 
Heap table: 1 -> 20
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [5, 4, 6])
----------------------------------------------------

ID: 6
Execution stack: [
WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4
20

File table: 
Heap table: 1 -> 20
2 -> 30
3 -> 4

Barrier table: 1 -> (3, [5, 4, 6])
----------------------------------------------------

ID: 6
Execution stack: [
Print{ReadHeap{v2}}
]
[
WriteHeap{v2, ReadHeap{v2} * 10}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4
20

File table: 
Heap table: 1 -> 20
2 -> 30
3 -> 4

Barrier table: 1 -> (3, [5, 4, 6])
----------------------------------------------------

ID: 6
Execution stack: [
Print{ReadHeap{v2}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4
20

File table: 
Heap table: 1 -> 20
2 -> 300
3 -> 4

Barrier table: 1 -> (3, [5, 4, 6])
----------------------------------------------------

ID: 6
Execution stack: 
Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4
20
300

File table: 
Heap table: 1 -> 20
2 -> 300
3 -> 4

Barrier table: 1 -> (3, [5, 4, 6])
----------------------------------------------------

ID: 1
Execution stack: [
(v1:Ref(int))|(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(cnt:int)
]

Symbol table: 
Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v1:Ref(int))|(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(v1:Ref(int))
]

Symbol table: cnt:0

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(v2:Ref(int))
]

Symbol table: cnt:0
v1:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(v3:Ref(int))
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
New{v1, 2}
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
New{v2, 3}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
New{v3, 4}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
newBarrier(cnt, ReadHeap{v2})
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 1
Execution stack: [
Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 1
Execution stack: [
Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 2
Execution stack: [
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 1
Execution stack: [
await(cnt)|Print{ReadHeap{v3}}
]
[
Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 2
Execution stack: [
WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
]
[
await(cnt)
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 1
Execution stack: [
await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2])
----------------------------------------------------

ID: 2
Execution stack: [
WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
]
[
await(cnt)
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2])
----------------------------------------------------

ID: 3
Execution stack: [
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2])
----------------------------------------------------

ID: 1
Execution stack: [
Print{ReadHeap{v3}}
]
[
await(cnt)
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2])
----------------------------------------------------

ID: 2
Execution stack: [
WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
]
[
await(cnt)
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2])
----------------------------------------------------

ID: 3
Execution stack: [
WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
]
[
await(cnt)
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2])
----------------------------------------------------

ID: 1
Execution stack: [
Print{ReadHeap{v3}}
]
[
await(cnt)
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 2
Execution stack: [
WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 3
Execution stack: [
WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
]
[
await(cnt)
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 1
Execution stack: [
Print{ReadHeap{v3}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 2
Execution stack: [
Print{ReadHeap{v1}}
]
[
WriteHeap{v1, ReadHeap{v1} * 10}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 3
Execution stack: [
WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 1
Execution stack: 
Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4

File table: 
Heap table: 1 -> 20
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 2
Execution stack: [
Print{ReadHeap{v1}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4

File table: 
Heap table: 1 -> 20
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 3
Execution stack: [
WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
]
[
WriteHeap{v2, ReadHeap{v2} * 10}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4

File table: 
Heap table: 1 -> 20
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 2
Execution stack: 
Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4
20

File table: 
Heap table: 1 -> 20
2 -> 30
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 3
Execution stack: [
WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4
20

File table: 
Heap table: 1 -> 20
2 -> 30
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 3
Execution stack: [
Print{ReadHeap{v2}}
]
[
WriteHeap{v2, ReadHeap{v2} * 10}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4
20

File table: 
Heap table: 1 -> 20
2 -> 30
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 3
Execution stack: [
Print{ReadHeap{v2}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4
20

File table: 
Heap table: 1 -> 20
2 -> 300
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 3
Execution stack: 
Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4
20
300

File table: 
Heap table: 1 -> 20
2 -> 300
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 1
Execution stack: [
(v1:Ref(int))|(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(cnt:int)
]

Symbol table: 
Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v1:Ref(int))|(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(v1:Ref(int))
]

Symbol table: cnt:0

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(v2:Ref(int))
]

Symbol table: cnt:0
v1:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(v3:Ref(int))
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
New{v1, 2}
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
New{v2, 3}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
New{v3, 4}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
newBarrier(cnt, ReadHeap{v2})
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 1
Execution stack: [
Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 1
Execution stack: [
Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 2
Execution stack: [
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 1
Execution stack: [
await(cnt)|Print{ReadHeap{v3}}
]
[
Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 2
Execution stack: [
WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
]
[
await(cnt)
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 1
Execution stack: [
await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2])
----------------------------------------------------

ID: 2
Execution stack: [
WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
]
[
await(cnt)
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2])
----------------------------------------------------

ID: 3
Execution stack: [
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2])
----------------------------------------------------

ID: 1
Execution stack: [
Print{ReadHeap{v3}}
]
[
await(cnt)
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2])
----------------------------------------------------

ID: 2
Execution stack: [
WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
]
[
await(cnt)
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2])
----------------------------------------------------

ID: 3
Execution stack: [
WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
]
[
await(cnt)
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2])
----------------------------------------------------

ID: 1
Execution stack: [
Print{ReadHeap{v3}}
]
[
await(cnt)
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 2
Execution stack: [
WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 3
Execution stack: [
WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
]
[
await(cnt)
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 1
Execution stack: [
Print{ReadHeap{v3}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 2
Execution stack: [
Print{ReadHeap{v1}}
]
[
WriteHeap{v1, ReadHeap{v1} * 10}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 3
Execution stack: [
WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 1
Execution stack: 
Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4

File table: 
Heap table: 1 -> 20
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 2
Execution stack: [
Print{ReadHeap{v1}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4

File table: 
Heap table: 1 -> 20
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 3
Execution stack: [
WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
]
[
WriteHeap{v2, ReadHeap{v2} * 10}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4

File table: 
Heap table: 1 -> 20
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 2
Execution stack: 
Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4
20

File table: 
Heap table: 1 -> 20
2 -> 30
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 3
Execution stack: [
WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4
20

File table: 
Heap table: 1 -> 20
2 -> 30
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 3
Execution stack: [
Print{ReadHeap{v2}}
]
[
WriteHeap{v2, ReadHeap{v2} * 10}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4
20

File table: 
Heap table: 1 -> 20
2 -> 30
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 3
Execution stack: [
Print{ReadHeap{v2}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4
20

File table: 
Heap table: 1 -> 20
2 -> 300
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 3
Execution stack: 
Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4
20
300

File table: 
Heap table: 1 -> 20
2 -> 300
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 1
Execution stack: [
(v1:Ref(int))|(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(cnt:int)
]

Symbol table: 
Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v1:Ref(int))|(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(v1:Ref(int))
]

Symbol table: cnt:0

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v2:Ref(int))|(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(v2:Ref(int))
]

Symbol table: cnt:0
v1:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v3:Ref(int))|New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
(v3:Ref(int))
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v1, 2}|New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
New{v1, 2}
]

Symbol table: cnt:0
v1:(0 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 
Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v2, 3}|New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
New{v2, 3}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(0 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v3, 4}|newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
New{v3, 4}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
newBarrier(cnt, ReadHeap{v2})|Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
newBarrier(cnt, ReadHeap{v2})
]

Symbol table: cnt:0
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 
----------------------------------------------------

ID: 1
Execution stack: [
Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}|Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 1
Execution stack: [
Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]
[
Fork{
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 1
Execution stack: [
Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}|await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 2
Execution stack: [
await(cnt)|WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 1
Execution stack: [
await(cnt)|Print{ReadHeap{v3}}
]
[
Fork{
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 2
Execution stack: [
WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
]
[
await(cnt)
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [])
----------------------------------------------------

ID: 1
Execution stack: [
await(cnt)|Print{ReadHeap{v3}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2])
----------------------------------------------------

ID: 2
Execution stack: [
WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
]
[
await(cnt)
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2])
----------------------------------------------------

ID: 3
Execution stack: [
await(cnt)|WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2])
----------------------------------------------------

ID: 1
Execution stack: [
Print{ReadHeap{v3}}
]
[
await(cnt)
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2])
----------------------------------------------------

ID: 2
Execution stack: [
WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
]
[
await(cnt)
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2])
----------------------------------------------------

ID: 3
Execution stack: [
WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
]
[
await(cnt)
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2])
----------------------------------------------------

ID: 1
Execution stack: [
Print{ReadHeap{v3}}
]
[
await(cnt)
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 2
Execution stack: [
WriteHeap{v1, ReadHeap{v1} * 10}|Print{ReadHeap{v1}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 3
Execution stack: [
WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
]
[
await(cnt)
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 1
Execution stack: [
Print{ReadHeap{v3}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 2
Execution stack: [
Print{ReadHeap{v1}}
]
[
WriteHeap{v1, ReadHeap{v1} * 10}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 3
Execution stack: [
WriteHeap{v2, ReadHeap{v2} * 10}|WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 
File table: 
Heap table: 1 -> 2
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 1
Execution stack: 
Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4

File table: 
Heap table: 1 -> 20
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 2
Execution stack: [
Print{ReadHeap{v1}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4

File table: 
Heap table: 1 -> 20
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 3
Execution stack: [
WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
]
[
WriteHeap{v2, ReadHeap{v2} * 10}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4

File table: 
Heap table: 1 -> 20
2 -> 3
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 2
Execution stack: 
Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4
20

File table: 
Heap table: 1 -> 20
2 -> 30
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 3
Execution stack: [
WriteHeap{v2, ReadHeap{v2} * 10}|Print{ReadHeap{v2}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4
20

File table: 
Heap table: 1 -> 20
2 -> 30
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 3
Execution stack: [
Print{ReadHeap{v2}}
]
[
WriteHeap{v2, ReadHeap{v2} * 10}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4
20

File table: 
Heap table: 1 -> 20
2 -> 30
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 3
Execution stack: [
Print{ReadHeap{v2}}
]

Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4
20

File table: 
Heap table: 1 -> 20
2 -> 300
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

ID: 3
Execution stack: 
Symbol table: cnt:1
v1:(1 -> int)
v2:(2 -> int)
v3:(3 -> int)

Output list: 4
20
300

File table: 
Heap table: 1 -> 20
2 -> 300
3 -> 4

Barrier table: 1 -> (3, [2, 1, 3])
----------------------------------------------------

