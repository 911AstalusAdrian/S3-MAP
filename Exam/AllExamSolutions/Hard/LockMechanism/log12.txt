ID: 1
Execution stack: [
{v = 20}|for(v=0;v<3;v=v + 1){Fork{
Print{v}|{v = v + 1}
}}|{v = v * 10}|Print{v}
]
[
(v:int)
]

Symbol table: 
Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = 20}|for(v=0;v<3;v=v + 1){Fork{
Print{v}|{v = v + 1}
}}|{v = v * 10}|Print{v}
]

Symbol table: v:0

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
for(v=0;v<3;v=v + 1){Fork{
Print{v}|{v = v + 1}
}}|{v = v * 10}|Print{v}
]
[
{v = 20}
]

Symbol table: v:0

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
for(v=0;v<3;v=v + 1){Fork{
Print{v}|{v = v + 1}
}}|{v = v * 10}|Print{v}
]

Symbol table: v:20

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
for(v=0;v<3;v=v + 1){Fork{
Print{v}|{v = v + 1}
}}
]

Symbol table: v:20

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
(v:int)|{v = 0}|while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]

Symbol table: v:20

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
{v = 0}|while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]
[
(v:int)
]

Symbol table: v:20

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = 20}|for(v=0;v<3;v=v + 1){Fork{
Print{v}|{v = v + 1}
}}|{v = v * 10}|Print{v}
]
[
(v:int)
]

Symbol table: 
Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = 20}|for(v=0;v<3;v=v + 1){Fork{
Print{v}|{v = v + 1}
}}|{v = v * 10}|Print{v}
]

Symbol table: v:0

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
for(v=0;v<3;v=v + 1){Fork{
Print{v}|{v = v + 1}
}}|{v = v * 10}|Print{v}
]
[
{v = 20}
]

Symbol table: v:0

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
for(v=0;v<3;v=v + 1){Fork{
Print{v}|{v = v + 1}
}}|{v = v * 10}|Print{v}
]

Symbol table: v:20

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
for(v=0;v<3;v=v + 1){Fork{
Print{v}|{v = v + 1}
}}
]

Symbol table: v:20

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
{v = 0}|while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]

Symbol table: v:20

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]
[
{v = 0}
]

Symbol table: v:20

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]

Symbol table: v:0

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]
[
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
]

Symbol table: v:0

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]
[
{v = v + 1}
]
[
Fork{
Print{v}|{v = v + 1}
}
]

Symbol table: v:0

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]
[
{v = v + 1}
]

Symbol table: v:0

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 2
Execution stack: [
Print{v}|{v = v + 1}
]

Symbol table: v:0

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]

Symbol table: v:1

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 2
Execution stack: [
{v = v + 1}
]
[
Print{v}
]

Symbol table: v:0

Output list: 
File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]
[
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
]

Symbol table: v:1

Output list: 0

File table: 
Heap table: 
----------------------------------------------------

ID: 2
Execution stack: [
{v = v + 1}
]

Symbol table: v:0

Output list: 0

File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]
[
{v = v + 1}
]
[
Fork{
Print{v}|{v = v + 1}
}
]

Symbol table: v:1

Output list: 0

File table: 
Heap table: 
----------------------------------------------------

ID: 2
Execution stack: 
Symbol table: v:1

Output list: 0

File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]
[
{v = v + 1}
]

Symbol table: v:1

Output list: 0

File table: 
Heap table: 
----------------------------------------------------

ID: 3
Execution stack: [
Print{v}|{v = v + 1}
]

Symbol table: v:1

Output list: 0

File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]

Symbol table: v:2

Output list: 0

File table: 
Heap table: 
----------------------------------------------------

ID: 3
Execution stack: [
{v = v + 1}
]
[
Print{v}
]

Symbol table: v:1

Output list: 0

File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]
[
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
]

Symbol table: v:2

Output list: 0
1

File table: 
Heap table: 
----------------------------------------------------

ID: 3
Execution stack: [
{v = v + 1}
]

Symbol table: v:1

Output list: 0
1

File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]
[
{v = v + 1}
]
[
Fork{
Print{v}|{v = v + 1}
}
]

Symbol table: v:2

Output list: 0
1

File table: 
Heap table: 
----------------------------------------------------

ID: 3
Execution stack: 
Symbol table: v:2

Output list: 0
1

File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]
[
{v = v + 1}
]

Symbol table: v:2

Output list: 0
1

File table: 
Heap table: 
----------------------------------------------------

ID: 4
Execution stack: [
Print{v}|{v = v + 1}
]

Symbol table: v:2

Output list: 0
1

File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]
[
while(v < 3) {
Fork{
Print{v}|{v = v + 1}
}|{v = v + 1}
}
]

Symbol table: v:3

Output list: 0
1

File table: 
Heap table: 
----------------------------------------------------

ID: 4
Execution stack: [
{v = v + 1}
]
[
Print{v}
]

Symbol table: v:2

Output list: 0
1

File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
{v = v * 10}|Print{v}
]

Symbol table: v:3

Output list: 0
1
2

File table: 
Heap table: 
----------------------------------------------------

ID: 4
Execution stack: [
{v = v + 1}
]

Symbol table: v:2

Output list: 0
1
2

File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
Print{v}
]
[
{v = v * 10}
]

Symbol table: v:3

Output list: 0
1
2

File table: 
Heap table: 
----------------------------------------------------

ID: 4
Execution stack: 
Symbol table: v:3

Output list: 0
1
2

File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
Print{v}
]

Symbol table: v:30

Output list: 0
1
2

File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: 
Symbol table: v:30

Output list: 0
1
2
30

File table: 
Heap table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v2:Ref(int))|(x:int)|(q:int)|New{v1, 20}|New{v2, 30}|newLock(x)|Fork{
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
}|newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
(v1:Ref(int))
]

Symbol table: 
Output list: 
File table: 
Heap table: 
Lock Table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v2:Ref(int))|(x:int)|(q:int)|New{v1, 20}|New{v2, 30}|newLock(x)|Fork{
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
}|newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: v1:(0 -> int)

Output list: 
File table: 
Heap table: 
Lock Table: 
----------------------------------------------------

ID: 1
Execution stack: [
(x:int)|(q:int)|New{v1, 20}|New{v2, 30}|newLock(x)|Fork{
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
}|newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
(v2:Ref(int))
]

Symbol table: v1:(0 -> int)

Output list: 
File table: 
Heap table: 
Lock Table: 
----------------------------------------------------

ID: 1
Execution stack: [
(x:int)|(q:int)|New{v1, 20}|New{v2, 30}|newLock(x)|Fork{
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
}|newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: v1:(0 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 
Lock Table: 
----------------------------------------------------

ID: 1
Execution stack: [
(q:int)|New{v1, 20}|New{v2, 30}|newLock(x)|Fork{
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
}|newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
(x:int)
]

Symbol table: v1:(0 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 
Lock Table: 
----------------------------------------------------

ID: 1
Execution stack: [
(q:int)|New{v1, 20}|New{v2, 30}|newLock(x)|Fork{
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
}|newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: x:0
v1:(0 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 
Lock Table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v1, 20}|New{v2, 30}|newLock(x)|Fork{
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
}|newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
(q:int)
]

Symbol table: x:0
v1:(0 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 
Lock Table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v1, 20}|New{v2, 30}|newLock(x)|Fork{
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
}|newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: q:0
x:0
v1:(0 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 
Lock Table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v2, 30}|newLock(x)|Fork{
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
}|newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
New{v1, 20}
]

Symbol table: q:0
x:0
v1:(0 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 
Lock Table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v2, 30}|newLock(x)|Fork{
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
}|newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: q:0
x:0
v1:(1 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 20

Lock Table: 
----------------------------------------------------

ID: 1
Execution stack: [
newLock(x)|Fork{
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
}|newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
New{v2, 30}
]

Symbol table: q:0
x:0
v1:(1 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 20

Lock Table: 
----------------------------------------------------

ID: 1
Execution stack: [
newLock(x)|Fork{
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
}|newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: q:0
x:0
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 
----------------------------------------------------

ID: 1
Execution stack: [
Fork{
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
}|newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
newLock(x)
]

Symbol table: q:0
x:0
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 
----------------------------------------------------

ID: 1
Execution stack: [
Fork{
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
}|newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
Fork{
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
}
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> -1

----------------------------------------------------

ID: 2
Execution stack: [
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
newLock(q)
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> -1

----------------------------------------------------

ID: 2
Execution stack: [
lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
]
[
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> -1
2 -> -1

----------------------------------------------------

ID: 2
Execution stack: [
lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> -1
2 -> -1

----------------------------------------------------

ID: 3
Execution stack: [
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> -1
2 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> -1
2 -> -1

----------------------------------------------------

ID: 2
Execution stack: [
WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
]
[
lock(x)
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> -1
2 -> -1

----------------------------------------------------

ID: 3
Execution stack: [
WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
]
[
lock(x)
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> -1
2 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> 3
2 -> -1

----------------------------------------------------

ID: 2
Execution stack: [
WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
]
[
lock(x)
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> 3
2 -> -1

----------------------------------------------------

ID: 3
Execution stack: [
WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> 3
2 -> -1

----------------------------------------------------

ID: 4
Execution stack: [
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> 3
2 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
NopStatement
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> 3
2 -> -1

----------------------------------------------------

ID: 2
Execution stack: [
WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
]
[
lock(x)
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> 3
2 -> -1

----------------------------------------------------

ID: 3
Execution stack: [
unlock(x)
]
[
WriteHeap{v1, ReadHeap{v1} - 1}
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> 3
2 -> -1

----------------------------------------------------

ID: 4
Execution stack: [
lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
]
[
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> 3
2 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> 3
2 -> -1

----------------------------------------------------

ID: 2
Execution stack: [
WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
]
[
lock(x)
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> 3
2 -> -1

----------------------------------------------------

ID: 3
Execution stack: [
unlock(x)
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> 3
2 -> -1

----------------------------------------------------

ID: 4
Execution stack: [
lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> 3
2 -> -1

----------------------------------------------------

ID: 5
Execution stack: [
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> 3
2 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
NopStatement
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> -1
2 -> -1

----------------------------------------------------

ID: 2
Execution stack: [
WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
]
[
lock(x)
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> -1
2 -> -1

----------------------------------------------------

ID: 3
Execution stack: 
Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> -1
2 -> -1

----------------------------------------------------

ID: 4
Execution stack: [
WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
]
[
lock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> -1
2 -> -1

----------------------------------------------------

ID: 5
Execution stack: [
WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
]
[
lock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> -1
2 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> 2
2 -> 4

----------------------------------------------------

ID: 2
Execution stack: [
WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> 2
2 -> 4

----------------------------------------------------

ID: 4
Execution stack: [
WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> 2
2 -> 4

----------------------------------------------------

ID: 5
Execution stack: [
WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
]
[
lock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> 2
2 -> 4

----------------------------------------------------

ID: 1
Execution stack: [
NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
NopStatement
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> 2
2 -> 4

----------------------------------------------------

ID: 2
Execution stack: [
unlock(x)
]
[
WriteHeap{v1, ReadHeap{v1} * 10}
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> 2
2 -> 4

----------------------------------------------------

ID: 4
Execution stack: [
unlock(q)
]
[
WriteHeap{v2, ReadHeap{v2} * 10}
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> 2
2 -> 4

----------------------------------------------------

ID: 5
Execution stack: [
WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
]
[
lock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> 2
2 -> 4

----------------------------------------------------

ID: 1
Execution stack: [
NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 300

Lock Table: 1 -> 2
2 -> 4

----------------------------------------------------

ID: 2
Execution stack: [
unlock(x)
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 300

Lock Table: 1 -> 2
2 -> 4

----------------------------------------------------

ID: 4
Execution stack: [
unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 300

Lock Table: 1 -> 2
2 -> 4

----------------------------------------------------

ID: 5
Execution stack: [
WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
]
[
lock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 300

Lock Table: 1 -> 2
2 -> 4

----------------------------------------------------

ID: 1
Execution stack: [
lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
NopStatement
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 300

Lock Table: 1 -> -1
2 -> 5

----------------------------------------------------

ID: 2
Execution stack: 
Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 300

Lock Table: 1 -> -1
2 -> 5

----------------------------------------------------

ID: 4
Execution stack: 
Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 300

Lock Table: 1 -> -1
2 -> 5

----------------------------------------------------

ID: 5
Execution stack: [
WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 300

Lock Table: 1 -> -1
2 -> 5

----------------------------------------------------

ID: 1
Execution stack: [
lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 300

Lock Table: 1 -> -1
2 -> 5

----------------------------------------------------

ID: 5
Execution stack: [
unlock(q)
]
[
WriteHeap{v2, ReadHeap{v2} + 5}
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 300

Lock Table: 1 -> -1
2 -> 5

----------------------------------------------------

ID: 1
Execution stack: [
Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
lock(x)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 305

Lock Table: 1 -> -1
2 -> 5

----------------------------------------------------

ID: 5
Execution stack: [
unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 305

Lock Table: 1 -> -1
2 -> 5

----------------------------------------------------

ID: 1
Execution stack: [
Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 305

Lock Table: 1 -> 1
2 -> -1

----------------------------------------------------

ID: 5
Execution stack: 
Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 305

Lock Table: 1 -> 1
2 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
Print{ReadHeap{v1}}
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 305

Lock Table: 1 -> 1
2 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 190

File table: 
Heap table: 1 -> 190
2 -> 305

Lock Table: 1 -> 1
2 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
unlock(x)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 190

File table: 
Heap table: 1 -> 190
2 -> 305

Lock Table: 1 -> 1
2 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 190

File table: 
Heap table: 1 -> 190
2 -> 305

Lock Table: 1 -> -1
2 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
Print{ReadHeap{v2}}|unlock(q)
]
[
lock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 190

File table: 
Heap table: 1 -> 190
2 -> 305

Lock Table: 1 -> -1
2 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 190

File table: 
Heap table: 1 -> 190
2 -> 305

Lock Table: 1 -> -1
2 -> 1

----------------------------------------------------

ID: 1
Execution stack: [
unlock(q)
]
[
Print{ReadHeap{v2}}
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 190

File table: 
Heap table: 1 -> 190
2 -> 305

Lock Table: 1 -> -1
2 -> 1

----------------------------------------------------

ID: 1
Execution stack: [
unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 190
305

File table: 
Heap table: 1 -> 190
2 -> 305

Lock Table: 1 -> -1
2 -> 1

----------------------------------------------------

ID: 1
Execution stack: 
Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 190
305

File table: 
Heap table: 1 -> 190
2 -> 305

Lock Table: 1 -> -1
2 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
(v2:Ref(int))|(x:int)|(q:int)|New{v1, 20}|New{v2, 30}|newLock(x)|Fork{
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
}|newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
(v1:Ref(int))
]

Symbol table: 
Output list: 
File table: 
Heap table: 
Lock Table: 
----------------------------------------------------

ID: 1
Execution stack: [
(v2:Ref(int))|(x:int)|(q:int)|New{v1, 20}|New{v2, 30}|newLock(x)|Fork{
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
}|newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: v1:(0 -> int)

Output list: 
File table: 
Heap table: 
Lock Table: 
----------------------------------------------------

ID: 1
Execution stack: [
(x:int)|(q:int)|New{v1, 20}|New{v2, 30}|newLock(x)|Fork{
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
}|newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
(v2:Ref(int))
]

Symbol table: v1:(0 -> int)

Output list: 
File table: 
Heap table: 
Lock Table: 
----------------------------------------------------

ID: 1
Execution stack: [
(x:int)|(q:int)|New{v1, 20}|New{v2, 30}|newLock(x)|Fork{
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
}|newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: v1:(0 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 
Lock Table: 
----------------------------------------------------

ID: 1
Execution stack: [
(q:int)|New{v1, 20}|New{v2, 30}|newLock(x)|Fork{
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
}|newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
(x:int)
]

Symbol table: v1:(0 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 
Lock Table: 
----------------------------------------------------

ID: 1
Execution stack: [
(q:int)|New{v1, 20}|New{v2, 30}|newLock(x)|Fork{
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
}|newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: x:0
v1:(0 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 
Lock Table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v1, 20}|New{v2, 30}|newLock(x)|Fork{
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
}|newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
(q:int)
]

Symbol table: x:0
v1:(0 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 
Lock Table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v1, 20}|New{v2, 30}|newLock(x)|Fork{
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
}|newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: q:0
x:0
v1:(0 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 
Lock Table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v2, 30}|newLock(x)|Fork{
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
}|newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
New{v1, 20}
]

Symbol table: q:0
x:0
v1:(0 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 
Lock Table: 
----------------------------------------------------

ID: 1
Execution stack: [
New{v2, 30}|newLock(x)|Fork{
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
}|newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: q:0
x:0
v1:(1 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 20

Lock Table: 
----------------------------------------------------

ID: 1
Execution stack: [
newLock(x)|Fork{
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
}|newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
New{v2, 30}
]

Symbol table: q:0
x:0
v1:(1 -> int)
v2:(0 -> int)

Output list: 
File table: 
Heap table: 1 -> 20

Lock Table: 
----------------------------------------------------

ID: 1
Execution stack: [
newLock(x)|Fork{
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
}|newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: q:0
x:0
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 
----------------------------------------------------

ID: 1
Execution stack: [
Fork{
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
}|newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
newLock(x)
]

Symbol table: q:0
x:0
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 
----------------------------------------------------

ID: 1
Execution stack: [
Fork{
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
}|newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
Fork{
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
}
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
newLock(q)|Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> -1

----------------------------------------------------

ID: 2
Execution stack: [
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}|lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
newLock(q)
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> -1

----------------------------------------------------

ID: 2
Execution stack: [
lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
]
[
Fork{
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
}
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}|NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> -1
2 -> -1

----------------------------------------------------

ID: 2
Execution stack: [
lock(x)|WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> -1
2 -> -1

----------------------------------------------------

ID: 3
Execution stack: [
lock(x)|WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> -1
2 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
Fork{
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
}
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> -1
2 -> -1

----------------------------------------------------

ID: 2
Execution stack: [
WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
]
[
lock(x)
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> -1
2 -> -1

----------------------------------------------------

ID: 3
Execution stack: [
WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
]
[
lock(x)
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> -1
2 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
NopStatement|NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> 3
2 -> -1

----------------------------------------------------

ID: 2
Execution stack: [
WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
]
[
lock(x)
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> 3
2 -> -1

----------------------------------------------------

ID: 3
Execution stack: [
WriteHeap{v1, ReadHeap{v1} - 1}|unlock(x)
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> 3
2 -> -1

----------------------------------------------------

ID: 4
Execution stack: [
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}|lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> 3
2 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
NopStatement
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> 3
2 -> -1

----------------------------------------------------

ID: 2
Execution stack: [
WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
]
[
lock(x)
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> 3
2 -> -1

----------------------------------------------------

ID: 3
Execution stack: [
unlock(x)
]
[
WriteHeap{v1, ReadHeap{v1} - 1}
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> 3
2 -> -1

----------------------------------------------------

ID: 4
Execution stack: [
lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
]
[
Fork{
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
}
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 20
2 -> 30

Lock Table: 1 -> 3
2 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
NopStatement|NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> 3
2 -> -1

----------------------------------------------------

ID: 2
Execution stack: [
WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
]
[
lock(x)
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> 3
2 -> -1

----------------------------------------------------

ID: 3
Execution stack: [
unlock(x)
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> 3
2 -> -1

----------------------------------------------------

ID: 4
Execution stack: [
lock(q)|WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> 3
2 -> -1

----------------------------------------------------

ID: 5
Execution stack: [
lock(q)|WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> 3
2 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
NopStatement
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> 2
2 -> -1

----------------------------------------------------

ID: 2
Execution stack: [
WriteHeap{v1, ReadHeap{v1} * 10}|unlock(x)
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> 2
2 -> -1

----------------------------------------------------

ID: 3
Execution stack: 
Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> 2
2 -> -1

----------------------------------------------------

ID: 4
Execution stack: [
WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
]
[
lock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> 2
2 -> -1

----------------------------------------------------

ID: 5
Execution stack: [
WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
]
[
lock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> 2
2 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
NopStatement|NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> 2
2 -> 4

----------------------------------------------------

ID: 2
Execution stack: [
unlock(x)
]
[
WriteHeap{v1, ReadHeap{v1} * 10}
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> 2
2 -> 4

----------------------------------------------------

ID: 4
Execution stack: [
WriteHeap{v2, ReadHeap{v2} * 10}|unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> 2
2 -> 4

----------------------------------------------------

ID: 5
Execution stack: [
WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
]
[
lock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 19
2 -> 30

Lock Table: 1 -> 2
2 -> 4

----------------------------------------------------

ID: 1
Execution stack: [
NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
NopStatement
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 30

Lock Table: 1 -> 2
2 -> 4

----------------------------------------------------

ID: 2
Execution stack: [
unlock(x)
]

Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 30

Lock Table: 1 -> 2
2 -> 4

----------------------------------------------------

ID: 4
Execution stack: [
unlock(q)
]
[
WriteHeap{v2, ReadHeap{v2} * 10}
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 30

Lock Table: 1 -> 2
2 -> 4

----------------------------------------------------

ID: 5
Execution stack: [
WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
]
[
lock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 30

Lock Table: 1 -> 2
2 -> 4

----------------------------------------------------

ID: 1
Execution stack: [
NopStatement|lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 300

Lock Table: 1 -> -1
2 -> 4

----------------------------------------------------

ID: 2
Execution stack: 
Symbol table: q:0
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 300

Lock Table: 1 -> -1
2 -> 4

----------------------------------------------------

ID: 4
Execution stack: [
unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 300

Lock Table: 1 -> -1
2 -> 4

----------------------------------------------------

ID: 5
Execution stack: [
WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
]
[
lock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 300

Lock Table: 1 -> -1
2 -> 4

----------------------------------------------------

ID: 1
Execution stack: [
lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
NopStatement
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 300

Lock Table: 1 -> -1
2 -> -1

----------------------------------------------------

ID: 4
Execution stack: 
Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 300

Lock Table: 1 -> -1
2 -> -1

----------------------------------------------------

ID: 5
Execution stack: [
WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
]
[
lock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 300

Lock Table: 1 -> -1
2 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
lock(x)|Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 300

Lock Table: 1 -> -1
2 -> 5

----------------------------------------------------

ID: 5
Execution stack: [
WriteHeap{v2, ReadHeap{v2} + 5}|unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 300

Lock Table: 1 -> -1
2 -> 5

----------------------------------------------------

ID: 1
Execution stack: [
Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
lock(x)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 300

Lock Table: 1 -> -1
2 -> 5

----------------------------------------------------

ID: 5
Execution stack: [
unlock(q)
]
[
WriteHeap{v2, ReadHeap{v2} + 5}
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 300

Lock Table: 1 -> -1
2 -> 5

----------------------------------------------------

ID: 1
Execution stack: [
Print{ReadHeap{v1}}|unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 305

Lock Table: 1 -> 1
2 -> 5

----------------------------------------------------

ID: 5
Execution stack: [
unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 305

Lock Table: 1 -> 1
2 -> 5

----------------------------------------------------

ID: 1
Execution stack: [
unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
Print{ReadHeap{v1}}
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 305

Lock Table: 1 -> 1
2 -> -1

----------------------------------------------------

ID: 5
Execution stack: 
Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 
File table: 
Heap table: 1 -> 190
2 -> 305

Lock Table: 1 -> 1
2 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
unlock(x)|lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 190

File table: 
Heap table: 1 -> 190
2 -> 305

Lock Table: 1 -> 1
2 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
lock(q)|Print{ReadHeap{v2}}|unlock(q)
]
[
unlock(x)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 190

File table: 
Heap table: 1 -> 190
2 -> 305

Lock Table: 1 -> 1
2 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
lock(q)|Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 190

File table: 
Heap table: 1 -> 190
2 -> 305

Lock Table: 1 -> -1
2 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
Print{ReadHeap{v2}}|unlock(q)
]
[
lock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 190

File table: 
Heap table: 1 -> 190
2 -> 305

Lock Table: 1 -> -1
2 -> -1

----------------------------------------------------

ID: 1
Execution stack: [
Print{ReadHeap{v2}}|unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 190

File table: 
Heap table: 1 -> 190
2 -> 305

Lock Table: 1 -> -1
2 -> 1

----------------------------------------------------

ID: 1
Execution stack: [
unlock(q)
]
[
Print{ReadHeap{v2}}
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 190

File table: 
Heap table: 1 -> 190
2 -> 305

Lock Table: 1 -> -1
2 -> 1

----------------------------------------------------

ID: 1
Execution stack: [
unlock(q)
]

Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 190
305

File table: 
Heap table: 1 -> 190
2 -> 305

Lock Table: 1 -> -1
2 -> 1

----------------------------------------------------

ID: 1
Execution stack: 
Symbol table: q:2
x:1
v1:(1 -> int)
v2:(2 -> int)

Output list: 190
305

File table: 
Heap table: 1 -> 190
2 -> 305

Lock Table: 1 -> -1
2 -> -1

----------------------------------------------------

