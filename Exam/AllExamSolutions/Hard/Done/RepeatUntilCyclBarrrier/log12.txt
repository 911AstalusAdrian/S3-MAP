
----------------START STATE PROGRAM 1 ----------------
Execution Stack:
Ref(int) v1
Ref(int) v2
Ref(int) v3
int cnt
new(v1,2)
new(v2,3)
new(v3,4)
newBarrier(cnt,rH(v2))
fork(((await(cnt);wH(v1,rH(v1) * 10));print(rH(v1))))
fork(((await(cnt);wH(v2,rH(v2) * 10));(wH(v2,rH(v2) * 10);print(rH(v2)))))
await(cnt)
print(rH(v3))
Symbol Table:
Output:
File Table:
Heap:
BarrierTable:
----------------END STATE PROGRAM 1----------------


----------------START STATE PROGRAM 1 ----------------
Execution Stack:
Ref(int) v1
Ref(int) v2
Ref(int) v3
int cnt
new(v1,2)
new(v2,3)
new(v3,4)
newBarrier(cnt,rH(v2))
fork(((await(cnt);wH(v1,rH(v1) * 10));print(rH(v1))))
fork(((await(cnt);wH(v2,rH(v2) * 10));(wH(v2,rH(v2) * 10);print(rH(v2)))))
await(cnt)
print(rH(v3))
Symbol Table:
Output:
File Table:
Heap:
BarrierTable:
----------------END STATE PROGRAM 1----------------


----------------START STATE PROGRAM 1 ----------------
Execution Stack:
Ref(int) v2
Ref(int) v3
int cnt
new(v1,2)
new(v2,3)
new(v3,4)
newBarrier(cnt,rH(v2))
fork(((await(cnt);wH(v1,rH(v1) * 10));print(rH(v1))))
fork(((await(cnt);wH(v2,rH(v2) * 10));(wH(v2,rH(v2) * 10);print(rH(v2)))))
await(cnt)
print(rH(v3))
Symbol Table:
v1 -> (0,int)
Output:
File Table:
Heap:
BarrierTable:
----------------END STATE PROGRAM 1----------------


----------------START STATE PROGRAM 1 ----------------
Execution Stack:
Ref(int) v2
Ref(int) v3
int cnt
new(v1,2)
new(v2,3)
new(v3,4)
newBarrier(cnt,rH(v2))
fork(((await(cnt);wH(v1,rH(v1) * 10));print(rH(v1))))
fork(((await(cnt);wH(v2,rH(v2) * 10));(wH(v2,rH(v2) * 10);print(rH(v2)))))
await(cnt)
print(rH(v3))
Symbol Table:
v1 -> (0,int)
Output:
File Table:
Heap:
BarrierTable:
----------------END STATE PROGRAM 1----------------


----------------START STATE PROGRAM 1 ----------------
Execution Stack:
Ref(int) v3
int cnt
new(v1,2)
new(v2,3)
new(v3,4)
newBarrier(cnt,rH(v2))
fork(((await(cnt);wH(v1,rH(v1) * 10));print(rH(v1))))
fork(((await(cnt);wH(v2,rH(v2) * 10));(wH(v2,rH(v2) * 10);print(rH(v2)))))
await(cnt)
print(rH(v3))
Symbol Table:
v1 -> (0,int)
v2 -> (0,int)
Output:
File Table:
Heap:
BarrierTable:
----------------END STATE PROGRAM 1----------------


----------------START STATE PROGRAM 1 ----------------
Execution Stack:
Ref(int) v3
int cnt
new(v1,2)
new(v2,3)
new(v3,4)
newBarrier(cnt,rH(v2))
fork(((await(cnt);wH(v1,rH(v1) * 10));print(rH(v1))))
fork(((await(cnt);wH(v2,rH(v2) * 10));(wH(v2,rH(v2) * 10);print(rH(v2)))))
await(cnt)
print(rH(v3))
Symbol Table:
v1 -> (0,int)
v2 -> (0,int)
Output:
File Table:
Heap:
BarrierTable:
----------------END STATE PROGRAM 1----------------


----------------START STATE PROGRAM 1 ----------------
Execution Stack:
int cnt
new(v1,2)
new(v2,3)
new(v3,4)
newBarrier(cnt,rH(v2))
fork(((await(cnt);wH(v1,rH(v1) * 10));print(rH(v1))))
fork(((await(cnt);wH(v2,rH(v2) * 10));(wH(v2,rH(v2) * 10);print(rH(v2)))))
await(cnt)
print(rH(v3))
Symbol Table:
v1 -> (0,int)
v2 -> (0,int)
v3 -> (0,int)
Output:
File Table:
Heap:
BarrierTable:
----------------END STATE PROGRAM 1----------------


----------------START STATE PROGRAM 1 ----------------
Execution Stack:
int cnt
new(v1,2)
new(v2,3)
new(v3,4)
newBarrier(cnt,rH(v2))
fork(((await(cnt);wH(v1,rH(v1) * 10));print(rH(v1))))
fork(((await(cnt);wH(v2,rH(v2) * 10));(wH(v2,rH(v2) * 10);print(rH(v2)))))
await(cnt)
print(rH(v3))
Symbol Table:
v1 -> (0,int)
v2 -> (0,int)
v3 -> (0,int)
Output:
File Table:
Heap:
BarrierTable:
----------------END STATE PROGRAM 1----------------


----------------START STATE PROGRAM 1 ----------------
Execution Stack:
new(v1,2)
new(v2,3)
new(v3,4)
newBarrier(cnt,rH(v2))
fork(((await(cnt);wH(v1,rH(v1) * 10));print(rH(v1))))
fork(((await(cnt);wH(v2,rH(v2) * 10));(wH(v2,rH(v2) * 10);print(rH(v2)))))
await(cnt)
print(rH(v3))
Symbol Table:
cnt -> 0
v1 -> (0,int)
v2 -> (0,int)
v3 -> (0,int)
Output:
File Table:
Heap:
BarrierTable:
----------------END STATE PROGRAM 1----------------


----------------START STATE PROGRAM 1 ----------------
Execution Stack:
new(v1,2)
new(v2,3)
new(v3,4)
newBarrier(cnt,rH(v2))
fork(((await(cnt);wH(v1,rH(v1) * 10));print(rH(v1))))
fork(((await(cnt);wH(v2,rH(v2) * 10));(wH(v2,rH(v2) * 10);print(rH(v2)))))
await(cnt)
print(rH(v3))
Symbol Table:
cnt -> 0
v1 -> (0,int)
v2 -> (0,int)
v3 -> (0,int)
Output:
File Table:
Heap:
BarrierTable:
----------------END STATE PROGRAM 1----------------


----------------START STATE PROGRAM 1 ----------------
Execution Stack:
new(v2,3)
new(v3,4)
newBarrier(cnt,rH(v2))
fork(((await(cnt);wH(v1,rH(v1) * 10));print(rH(v1))))
fork(((await(cnt);wH(v2,rH(v2) * 10));(wH(v2,rH(v2) * 10);print(rH(v2)))))
await(cnt)
print(rH(v3))
Symbol Table:
cnt -> 0
v1 -> (1,int)
v2 -> (0,int)
v3 -> (0,int)
Output:
File Table:
Heap:
1 -> 2
BarrierTable:
----------------END STATE PROGRAM 1----------------


----------------START STATE PROGRAM 1 ----------------
Execution Stack:
new(v2,3)
new(v3,4)
newBarrier(cnt,rH(v2))
fork(((await(cnt);wH(v1,rH(v1) * 10));print(rH(v1))))
fork(((await(cnt);wH(v2,rH(v2) * 10));(wH(v2,rH(v2) * 10);print(rH(v2)))))
await(cnt)
print(rH(v3))
Symbol Table:
cnt -> 0
v1 -> (1,int)
v2 -> (0,int)
v3 -> (0,int)
Output:
File Table:
Heap:
1 -> 2
BarrierTable:
----------------END STATE PROGRAM 1----------------


----------------START STATE PROGRAM 1 ----------------
Execution Stack:
new(v3,4)
newBarrier(cnt,rH(v2))
fork(((await(cnt);wH(v1,rH(v1) * 10));print(rH(v1))))
fork(((await(cnt);wH(v2,rH(v2) * 10));(wH(v2,rH(v2) * 10);print(rH(v2)))))
await(cnt)
print(rH(v3))
Symbol Table:
cnt -> 0
v1 -> (1,int)
v2 -> (2,int)
v3 -> (0,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
BarrierTable:
----------------END STATE PROGRAM 1----------------


----------------START STATE PROGRAM 1 ----------------
Execution Stack:
new(v3,4)
newBarrier(cnt,rH(v2))
fork(((await(cnt);wH(v1,rH(v1) * 10));print(rH(v1))))
fork(((await(cnt);wH(v2,rH(v2) * 10));(wH(v2,rH(v2) * 10);print(rH(v2)))))
await(cnt)
print(rH(v3))
Symbol Table:
cnt -> 0
v1 -> (1,int)
v2 -> (2,int)
v3 -> (0,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
BarrierTable:
----------------END STATE PROGRAM 1----------------


----------------START STATE PROGRAM 1 ----------------
Execution Stack:
newBarrier(cnt,rH(v2))
fork(((await(cnt);wH(v1,rH(v1) * 10));print(rH(v1))))
fork(((await(cnt);wH(v2,rH(v2) * 10));(wH(v2,rH(v2) * 10);print(rH(v2)))))
await(cnt)
print(rH(v3))
Symbol Table:
cnt -> 0
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
----------------END STATE PROGRAM 1----------------


----------------START STATE PROGRAM 1 ----------------
Execution Stack:
newBarrier(cnt,rH(v2))
fork(((await(cnt);wH(v1,rH(v1) * 10));print(rH(v1))))
fork(((await(cnt);wH(v2,rH(v2) * 10));(wH(v2,rH(v2) * 10);print(rH(v2)))))
await(cnt)
print(rH(v3))
Symbol Table:
cnt -> 0
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
----------------END STATE PROGRAM 1----------------


----------------START STATE PROGRAM 1 ----------------
Execution Stack:
fork(((await(cnt);wH(v1,rH(v1) * 10));print(rH(v1))))
fork(((await(cnt);wH(v2,rH(v2) * 10));(wH(v2,rH(v2) * 10);print(rH(v2)))))
await(cnt)
print(rH(v3))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[]
----------------END STATE PROGRAM 1----------------


----------------START STATE PROGRAM 1 ----------------
Execution Stack:
fork(((await(cnt);wH(v1,rH(v1) * 10));print(rH(v1))))
fork(((await(cnt);wH(v2,rH(v2) * 10));(wH(v2,rH(v2) * 10);print(rH(v2)))))
await(cnt)
print(rH(v3))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[]
----------------END STATE PROGRAM 1----------------


----------------START STATE PROGRAM 1 ----------------
Execution Stack:
fork(((await(cnt);wH(v2,rH(v2) * 10));(wH(v2,rH(v2) * 10);print(rH(v2)))))
await(cnt)
print(rH(v3))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[]
----------------END STATE PROGRAM 1----------------


----------------START STATE PROGRAM 2 ----------------
Execution Stack:
await(cnt)
wH(v1,rH(v1) * 10)
print(rH(v1))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[]
----------------END STATE PROGRAM 2----------------


----------------START STATE PROGRAM 1 ----------------
Execution Stack:
fork(((await(cnt);wH(v2,rH(v2) * 10));(wH(v2,rH(v2) * 10);print(rH(v2)))))
await(cnt)
print(rH(v3))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[]
----------------END STATE PROGRAM 1----------------


----------------START STATE PROGRAM 2 ----------------
Execution Stack:
await(cnt)
wH(v1,rH(v1) * 10)
print(rH(v1))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[]
----------------END STATE PROGRAM 2----------------


----------------START STATE PROGRAM 1 ----------------
Execution Stack:
await(cnt)
print(rH(v3))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[]
----------------END STATE PROGRAM 1----------------


----------------START STATE PROGRAM 2 ----------------
Execution Stack:
await(cnt)
wH(v1,rH(v1) * 10)
print(rH(v1))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[]
----------------END STATE PROGRAM 2----------------


----------------START STATE PROGRAM 3 ----------------
Execution Stack:
await(cnt)
wH(v2,rH(v2) * 10)
wH(v2,rH(v2) * 10)
print(rH(v2))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[]
----------------END STATE PROGRAM 3----------------


----------------START STATE PROGRAM 1 ----------------
Execution Stack:
await(cnt)
print(rH(v3))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[2]
----------------END STATE PROGRAM 1----------------


----------------START STATE PROGRAM 2 ----------------
Execution Stack:
await(cnt)
wH(v1,rH(v1) * 10)
print(rH(v1))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[2]
----------------END STATE PROGRAM 2----------------


----------------START STATE PROGRAM 3 ----------------
Execution Stack:
await(cnt)
wH(v2,rH(v2) * 10)
wH(v2,rH(v2) * 10)
print(rH(v2))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[2]
----------------END STATE PROGRAM 3----------------


----------------START STATE PROGRAM 1 ----------------
Execution Stack:
await(cnt)
print(rH(v3))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[2, 1]
----------------END STATE PROGRAM 1----------------


----------------START STATE PROGRAM 2 ----------------
Execution Stack:
await(cnt)
wH(v1,rH(v1) * 10)
print(rH(v1))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[2, 1]
----------------END STATE PROGRAM 2----------------


----------------START STATE PROGRAM 3 ----------------
Execution Stack:
await(cnt)
wH(v2,rH(v2) * 10)
wH(v2,rH(v2) * 10)
print(rH(v2))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[2, 1]
----------------END STATE PROGRAM 3----------------


----------------START STATE PROGRAM 1 ----------------
Execution Stack:
await(cnt)
print(rH(v3))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[2, 1, 3]
----------------END STATE PROGRAM 1----------------


----------------START STATE PROGRAM 2 ----------------
Execution Stack:
wH(v1,rH(v1) * 10)
print(rH(v1))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[2, 1, 3]
----------------END STATE PROGRAM 2----------------


----------------START STATE PROGRAM 3 ----------------
Execution Stack:
await(cnt)
wH(v2,rH(v2) * 10)
wH(v2,rH(v2) * 10)
print(rH(v2))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[2, 1, 3]
----------------END STATE PROGRAM 3----------------


----------------START STATE PROGRAM 1 ----------------
Execution Stack:
print(rH(v3))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 20
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[2, 1, 3]
----------------END STATE PROGRAM 1----------------


----------------START STATE PROGRAM 2 ----------------
Execution Stack:
print(rH(v1))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 20
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[2, 1, 3]
----------------END STATE PROGRAM 2----------------


----------------START STATE PROGRAM 3 ----------------
Execution Stack:
wH(v2,rH(v2) * 10)
wH(v2,rH(v2) * 10)
print(rH(v2))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 20
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[2, 1, 3]
----------------END STATE PROGRAM 3----------------


----------------START STATE PROGRAM 3 ----------------
Execution Stack:
wH(v2,rH(v2) * 10)
print(rH(v2))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
4
20
File Table:
Heap:
1 -> 20
2 -> 30
3 -> 4
BarrierTable:
1 -> 3=[2, 1, 3]
----------------END STATE PROGRAM 3----------------


----------------START STATE PROGRAM 3 ----------------
Execution Stack:
wH(v2,rH(v2) * 10)
print(rH(v2))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
4
20
File Table:
Heap:
1 -> 20
2 -> 30
3 -> 4
BarrierTable:
1 -> 3=[2, 1, 3]
----------------END STATE PROGRAM 3----------------


----------------START STATE PROGRAM 3 ----------------
Execution Stack:
print(rH(v2))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
4
20
File Table:
Heap:
1 -> 20
2 -> 300
3 -> 4
BarrierTable:
1 -> 3=[2, 1, 3]
----------------END STATE PROGRAM 3----------------

