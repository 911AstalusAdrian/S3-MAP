
----------------START STATE PROGRAM 5 ----------------
Execution Stack:
Ref(int) v1
Ref(int) v2
Ref(int) v3
int cnt
new(v1,2)
new(v2,3)
new(v3,4)
newLatch(cnt,rH(v2))
fork((wH(v1,rH(v1) * 10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2) * 10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))))))))))
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
Output:
File Table:
Heap:
LatchTable:
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
Ref(int) v1
Ref(int) v2
Ref(int) v3
int cnt
new(v1,2)
new(v2,3)
new(v3,4)
newLatch(cnt,rH(v2))
fork((wH(v1,rH(v1) * 10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2) * 10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))))))))))
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
Output:
File Table:
Heap:
LatchTable:
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
Ref(int) v2
Ref(int) v3
int cnt
new(v1,2)
new(v2,3)
new(v3,4)
newLatch(cnt,rH(v2))
fork((wH(v1,rH(v1) * 10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2) * 10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))))))))))
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
v1 -> (0,int)
Output:
File Table:
Heap:
LatchTable:
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
Ref(int) v2
Ref(int) v3
int cnt
new(v1,2)
new(v2,3)
new(v3,4)
newLatch(cnt,rH(v2))
fork((wH(v1,rH(v1) * 10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2) * 10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))))))))))
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
v1 -> (0,int)
Output:
File Table:
Heap:
LatchTable:
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
Ref(int) v3
int cnt
new(v1,2)
new(v2,3)
new(v3,4)
newLatch(cnt,rH(v2))
fork((wH(v1,rH(v1) * 10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2) * 10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))))))))))
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
v1 -> (0,int)
v2 -> (0,int)
Output:
File Table:
Heap:
LatchTable:
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
Ref(int) v3
int cnt
new(v1,2)
new(v2,3)
new(v3,4)
newLatch(cnt,rH(v2))
fork((wH(v1,rH(v1) * 10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2) * 10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))))))))))
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
v1 -> (0,int)
v2 -> (0,int)
Output:
File Table:
Heap:
LatchTable:
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
int cnt
new(v1,2)
new(v2,3)
new(v3,4)
newLatch(cnt,rH(v2))
fork((wH(v1,rH(v1) * 10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2) * 10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))))))))))
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
v1 -> (0,int)
v2 -> (0,int)
v3 -> (0,int)
Output:
File Table:
Heap:
LatchTable:
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
int cnt
new(v1,2)
new(v2,3)
new(v3,4)
newLatch(cnt,rH(v2))
fork((wH(v1,rH(v1) * 10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2) * 10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))))))))))
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
v1 -> (0,int)
v2 -> (0,int)
v3 -> (0,int)
Output:
File Table:
Heap:
LatchTable:
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
new(v1,2)
new(v2,3)
new(v3,4)
newLatch(cnt,rH(v2))
fork((wH(v1,rH(v1) * 10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2) * 10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))))))))))
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 0
v1 -> (0,int)
v2 -> (0,int)
v3 -> (0,int)
Output:
File Table:
Heap:
LatchTable:
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
new(v1,2)
new(v2,3)
new(v3,4)
newLatch(cnt,rH(v2))
fork((wH(v1,rH(v1) * 10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2) * 10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))))))))))
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 0
v1 -> (0,int)
v2 -> (0,int)
v3 -> (0,int)
Output:
File Table:
Heap:
LatchTable:
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
new(v2,3)
new(v3,4)
newLatch(cnt,rH(v2))
fork((wH(v1,rH(v1) * 10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2) * 10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))))))))))
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 0
v1 -> (1,int)
v2 -> (0,int)
v3 -> (0,int)
Output:
File Table:
Heap:
1 -> 2
LatchTable:
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
new(v2,3)
new(v3,4)
newLatch(cnt,rH(v2))
fork((wH(v1,rH(v1) * 10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2) * 10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))))))))))
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 0
v1 -> (1,int)
v2 -> (0,int)
v3 -> (0,int)
Output:
File Table:
Heap:
1 -> 2
LatchTable:
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
new(v3,4)
newLatch(cnt,rH(v2))
fork((wH(v1,rH(v1) * 10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2) * 10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))))))))))
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 0
v1 -> (1,int)
v2 -> (2,int)
v3 -> (0,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
LatchTable:
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
new(v3,4)
newLatch(cnt,rH(v2))
fork((wH(v1,rH(v1) * 10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2) * 10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))))))))))
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 0
v1 -> (1,int)
v2 -> (2,int)
v3 -> (0,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
LatchTable:
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
newLatch(cnt,rH(v2))
fork((wH(v1,rH(v1) * 10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2) * 10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))))))))))
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 0
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
3 -> 4
LatchTable:
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
newLatch(cnt,rH(v2))
fork((wH(v1,rH(v1) * 10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2) * 10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))))))))))
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 0
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
3 -> 4
LatchTable:
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
fork((wH(v1,rH(v1) * 10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2) * 10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))))))))))
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
3 -> 4
LatchTable:
1 -> 3
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
fork((wH(v1,rH(v1) * 10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2) * 10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))))))))))
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
3 -> 4
LatchTable:
1 -> 3
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
3 -> 4
LatchTable:
1 -> 3
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 6 ----------------
Execution Stack:
wH(v1,rH(v1) * 10)
print(rH(v1))
countDown(cnt)
fork((wH(v2,rH(v2) * 10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))))))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
3 -> 4
LatchTable:
1 -> 3
----------------END STATE PROGRAM 6----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
3 -> 4
LatchTable:
1 -> 3
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 6 ----------------
Execution Stack:
wH(v1,rH(v1) * 10)
print(rH(v1))
countDown(cnt)
fork((wH(v2,rH(v2) * 10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))))))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 2
2 -> 3
3 -> 4
LatchTable:
1 -> 3
----------------END STATE PROGRAM 6----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 20
2 -> 3
3 -> 4
LatchTable:
1 -> 3
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 6 ----------------
Execution Stack:
print(rH(v1))
countDown(cnt)
fork((wH(v2,rH(v2) * 10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))))))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 20
2 -> 3
3 -> 4
LatchTable:
1 -> 3
----------------END STATE PROGRAM 6----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 20
2 -> 3
3 -> 4
LatchTable:
1 -> 3
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 6 ----------------
Execution Stack:
print(rH(v1))
countDown(cnt)
fork((wH(v2,rH(v2) * 10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))))))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
File Table:
Heap:
1 -> 20
2 -> 3
3 -> 4
LatchTable:
1 -> 3
----------------END STATE PROGRAM 6----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
File Table:
Heap:
1 -> 20
2 -> 3
3 -> 4
LatchTable:
1 -> 3
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 6 ----------------
Execution Stack:
countDown(cnt)
fork((wH(v2,rH(v2) * 10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))))))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
File Table:
Heap:
1 -> 20
2 -> 3
3 -> 4
LatchTable:
1 -> 3
----------------END STATE PROGRAM 6----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
File Table:
Heap:
1 -> 20
2 -> 3
3 -> 4
LatchTable:
1 -> 3
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 6 ----------------
Execution Stack:
countDown(cnt)
fork((wH(v2,rH(v2) * 10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))))))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
File Table:
Heap:
1 -> 20
2 -> 3
3 -> 4
LatchTable:
1 -> 3
----------------END STATE PROGRAM 6----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
File Table:
Heap:
1 -> 20
2 -> 3
3 -> 4
LatchTable:
1 -> 2
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 6 ----------------
Execution Stack:
fork((wH(v2,rH(v2) * 10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))))))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
File Table:
Heap:
1 -> 20
2 -> 3
3 -> 4
LatchTable:
1 -> 2
----------------END STATE PROGRAM 6----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
File Table:
Heap:
1 -> 20
2 -> 3
3 -> 4
LatchTable:
1 -> 2
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 7 ----------------
Execution Stack:
wH(v2,rH(v2) * 10)
print(rH(v2))
countDown(cnt)
fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
File Table:
Heap:
1 -> 20
2 -> 3
3 -> 4
LatchTable:
1 -> 2
----------------END STATE PROGRAM 7----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
File Table:
Heap:
1 -> 20
2 -> 3
3 -> 4
LatchTable:
1 -> 2
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 7 ----------------
Execution Stack:
wH(v2,rH(v2) * 10)
print(rH(v2))
countDown(cnt)
fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
File Table:
Heap:
1 -> 20
2 -> 3
3 -> 4
LatchTable:
1 -> 2
----------------END STATE PROGRAM 7----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
File Table:
Heap:
1 -> 20
2 -> 30
3 -> 4
LatchTable:
1 -> 2
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 7 ----------------
Execution Stack:
print(rH(v2))
countDown(cnt)
fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
File Table:
Heap:
1 -> 20
2 -> 30
3 -> 4
LatchTable:
1 -> 2
----------------END STATE PROGRAM 7----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
File Table:
Heap:
1 -> 20
2 -> 30
3 -> 4
LatchTable:
1 -> 2
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 7 ----------------
Execution Stack:
print(rH(v2))
countDown(cnt)
fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
File Table:
Heap:
1 -> 20
2 -> 30
3 -> 4
LatchTable:
1 -> 2
----------------END STATE PROGRAM 7----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
30
File Table:
Heap:
1 -> 20
2 -> 30
3 -> 4
LatchTable:
1 -> 2
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 7 ----------------
Execution Stack:
countDown(cnt)
fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
30
File Table:
Heap:
1 -> 20
2 -> 30
3 -> 4
LatchTable:
1 -> 2
----------------END STATE PROGRAM 7----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
30
File Table:
Heap:
1 -> 20
2 -> 30
3 -> 4
LatchTable:
1 -> 2
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 7 ----------------
Execution Stack:
countDown(cnt)
fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
30
File Table:
Heap:
1 -> 20
2 -> 30
3 -> 4
LatchTable:
1 -> 2
----------------END STATE PROGRAM 7----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
30
Thread Id: 7
File Table:
Heap:
1 -> 20
2 -> 30
3 -> 4
LatchTable:
1 -> 1
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 7 ----------------
Execution Stack:
fork((wH(v3,rH(v3) * 10);(print(rH(v3));countDown(cnt))))
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
30
Thread Id: 7
File Table:
Heap:
1 -> 20
2 -> 30
3 -> 4
LatchTable:
1 -> 1
----------------END STATE PROGRAM 7----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
30
Thread Id: 7
File Table:
Heap:
1 -> 20
2 -> 30
3 -> 4
LatchTable:
1 -> 1
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 8 ----------------
Execution Stack:
wH(v3,rH(v3) * 10)
print(rH(v3))
countDown(cnt)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
30
Thread Id: 7
File Table:
Heap:
1 -> 20
2 -> 30
3 -> 4
LatchTable:
1 -> 1
----------------END STATE PROGRAM 8----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
30
Thread Id: 7
File Table:
Heap:
1 -> 20
2 -> 30
3 -> 4
LatchTable:
1 -> 1
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 8 ----------------
Execution Stack:
wH(v3,rH(v3) * 10)
print(rH(v3))
countDown(cnt)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
30
Thread Id: 7
File Table:
Heap:
1 -> 20
2 -> 30
3 -> 4
LatchTable:
1 -> 1
----------------END STATE PROGRAM 8----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
30
Thread Id: 7
File Table:
Heap:
1 -> 20
2 -> 30
3 -> 40
LatchTable:
1 -> 1
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 8 ----------------
Execution Stack:
print(rH(v3))
countDown(cnt)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
30
Thread Id: 7
File Table:
Heap:
1 -> 20
2 -> 30
3 -> 40
LatchTable:
1 -> 1
----------------END STATE PROGRAM 8----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
30
Thread Id: 7
File Table:
Heap:
1 -> 20
2 -> 30
3 -> 40
LatchTable:
1 -> 1
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 8 ----------------
Execution Stack:
print(rH(v3))
countDown(cnt)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
30
Thread Id: 7
File Table:
Heap:
1 -> 20
2 -> 30
3 -> 40
LatchTable:
1 -> 1
----------------END STATE PROGRAM 8----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
30
Thread Id: 7
40
File Table:
Heap:
1 -> 20
2 -> 30
3 -> 40
LatchTable:
1 -> 1
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 8 ----------------
Execution Stack:
countDown(cnt)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
30
Thread Id: 7
40
File Table:
Heap:
1 -> 20
2 -> 30
3 -> 40
LatchTable:
1 -> 1
----------------END STATE PROGRAM 8----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
await(cnt)
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
30
Thread Id: 7
40
Thread Id: 8
File Table:
Heap:
1 -> 20
2 -> 30
3 -> 40
LatchTable:
1 -> 0
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
30
Thread Id: 7
40
Thread Id: 8
File Table:
Heap:
1 -> 20
2 -> 30
3 -> 40
LatchTable:
1 -> 0
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
print(100)
countDown(cnt)
print(100)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
30
Thread Id: 7
40
Thread Id: 8
File Table:
Heap:
1 -> 20
2 -> 30
3 -> 40
LatchTable:
1 -> 0
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
countDown(cnt)
print(100)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
30
Thread Id: 7
40
Thread Id: 8
100
File Table:
Heap:
1 -> 20
2 -> 30
3 -> 40
LatchTable:
1 -> 0
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
countDown(cnt)
print(100)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
30
Thread Id: 7
40
Thread Id: 8
100
File Table:
Heap:
1 -> 20
2 -> 30
3 -> 40
LatchTable:
1 -> 0
----------------END STATE PROGRAM 5----------------


----------------START STATE PROGRAM 5 ----------------
Execution Stack:
print(100)
Symbol Table:
cnt -> 1
v1 -> (1,int)
v2 -> (2,int)
v3 -> (3,int)
Output:
20
Thread Id: 6
30
Thread Id: 7
40
Thread Id: 8
100
Thread Id: 5
File Table:
Heap:
1 -> 20
2 -> 30
3 -> 40
LatchTable:
1 -> 0
----------------END STATE PROGRAM 5----------------

